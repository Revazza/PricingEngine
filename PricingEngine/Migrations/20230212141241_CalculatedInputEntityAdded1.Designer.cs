// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PricingEngine.Db;

#nullable disable

namespace PricingEngine.Migrations
{
    [DbContext(typeof(PricingEngineDbContext))]
    [Migration("20230212141241_CalculatedInputEntityAdded1")]
    partial class CalculatedInputEntityAdded1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PricingEngine.Db.Entities.CalculatedInputEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CapitalAllocationRate")
                        .HasColumnType("float");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<double>("TransactionCostRate")
                        .HasColumnType("float");

                    b.Property<double>("UsedPayment")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CalculatedUserInputs");
                });

            modelBuilder.Entity("PricingEngine.Db.Entities.DbInputEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CapitalRiskRateWeight")
                        .HasColumnType("float");

                    b.Property<int>("CreditRiskAllocation")
                        .HasColumnType("int");

                    b.Property<double>("MaintenanceRate")
                        .HasColumnType("float");

                    b.Property<double>("PrepaymentRate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("DbInputs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3ab7668e-9dce-4aa8-a7be-41776e327a4d"),
                            CapitalRiskRateWeight = 0.014999999999999999,
                            CreditRiskAllocation = 0,
                            MaintenanceRate = 0.02,
                            PrepaymentRate = 0.070000000000000007
                        });
                });

            modelBuilder.Entity("PricingEngine.Db.Entities.UserInputEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AvgMonthlyFeeIncome")
                        .HasColumnType("float");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<double>("CommitmentAmount")
                        .HasColumnType("float");

                    b.Property<double>("DiscountFromStandardFee")
                        .HasColumnType("float");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<double>("InterestSpread")
                        .HasColumnType("float");

                    b.Property<int>("InterestType")
                        .HasColumnType("int");

                    b.Property<double>("MonthlyFeeIncome")
                        .HasColumnType("float");

                    b.Property<int>("OriginalTermInMonths")
                        .HasColumnType("int");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<int>("TeaserPeriod")
                        .HasColumnType("int");

                    b.Property<double>("TeaserSpread")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("UserInputs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("24d334ba-6b6a-4933-88cf-95392872438d"),
                            AvgMonthlyFeeIncome = 5.0,
                            Balance = 1000.0,
                            CommitmentAmount = 50.0,
                            DiscountFromStandardFee = 0.029999999999999999,
                            InterestRate = 0.080000000000000002,
                            InterestSpread = 0.029999999999999999,
                            InterestType = 0,
                            MonthlyFeeIncome = 2.0,
                            OriginalTermInMonths = 9,
                            PaymentType = 0,
                            ProductType = 0,
                            TeaserPeriod = 3,
                            TeaserSpread = 0.040000000000000001
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
